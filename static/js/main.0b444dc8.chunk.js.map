{"version":3,"sources":["components/TodoTemplate.js","TodoContext.js","components/TodoHead.js","components/TodoItems.js","components/TodoList.js","components/TodoCreate.js","App.js","reportWebVitals.js","index.js"],"names":["TodoTemplateBlock","styled","div","TodoTemplete","children","initialTodos","id","text","done","todoReducer","state","action","type","concat","todo","map","filter","console","log","TodoStateContext","createContext","TodoDispatchContext","TodoNextIdContext","TodoProvider","useReducer","dispatch","nextId","useRef","Provider","value","useTodoState","useContext","useTodoDispatch","TodoHeadBlock","TodoHead","todos","undoneTasks","today","Date","dateString","toLocaleDateString","year","month","day","dayname","weekday","className","length","Remove","TodoItemBlock","CheckCircle","props","css","Text","TodoItem","onClick","TodoListBlock","TodoList","CircleButton","open","InsertFormPositioner","InsertForm","form","Input","input","TodoCreate","useState","setOpen","setValue","onSubmit","e","preventDefault","current","placeholder","autoFocus","onChange","target","GlobalStyle","createGlobalStyle","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0b444dc8.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst TodoTemplateBlock = styled.div`\r\n    width: 512px;\r\n    height: 768px;\r\n\r\n    position: relative;\r\n    background: #fff;\r\n    border-radius: 16px;\r\n    box-shadow: 0 0 8px rgba(0, 0, 0, 0.04);\r\n    margin: 50px auto 32px;\r\n\r\n    display: flex;\r\n    // justify-content: center;\r\n    // align-items: center;\r\n    flex-direction: column;\r\n`;\r\n\r\nfunction TodoTemplete({children}) {\r\n    return (\r\n        <TodoTemplateBlock>\r\n            {children}\r\n        </TodoTemplateBlock>\r\n    );\r\n}\r\n\r\nexport default TodoTemplete;","import React, { useReducer, createContext, useContext, useRef } from 'react';\r\n\r\nconst initialTodos = [\r\n    {\r\n        id: 1,\r\n        text: '리액트 공부하기',\r\n        done: true\r\n    },\r\n    {\r\n        id: 2,\r\n        text: '리액트 복습하기',\r\n        done: true\r\n    },\r\n    {\r\n        id: 3,\r\n        text: '깃허브 올리기',\r\n        done: false\r\n    },\r\n    {\r\n        id: 4,\r\n        text: '기리 산책하기',\r\n        done: false\r\n    }\r\n];\r\n\r\nfunction todoReducer(state, action) {\r\n    switch (action.type) {\r\n        case 'CREATE':\r\n            return state.concat(action.todo);\r\n        case 'TOGGLE':\r\n            return state.map(todo =>\r\n                todo.id === action.id ?\r\n                { ...todo, done: !todo.done } : todo\r\n            );\r\n        case 'REMOVE':\r\n            return state.filter(todo => todo.id !== action.id)\r\n        default:\r\n            console.log('error');\r\n    }\r\n}\r\n\r\n//state 와 dispatch 를 함께 넣어주는 대신에, 두개의 Context 를 만들어서 따로 따로 넣어줄 것입니다. 이렇게 하면 dispatch 만 필요한 컴포넌트에서 불필요한 렌더링을 방지\r\nconst TodoStateContext = createContext();\r\nconst TodoDispatchContext = createContext();\r\nconst TodoNextIdContext = createContext();\r\n\r\n//state 와 dispatch 를 Context 통하여 다른 컴포넌트에서 바로 사용\r\nexport function TodoProvider({children}) {\r\n    const [state, dispatch] = useReducer(todoReducer, initialTodos);\r\n    const nextId = useRef(5);\r\n    return (\r\n        <TodoStateContext.Provider value={state}>\r\n            <TodoDispatchContext.Provider value={dispatch}>\r\n                <TodoNextIdContext.Provider value={nextId}>\r\n                    {children}\r\n                </TodoNextIdContext.Provider>\r\n            </TodoDispatchContext.Provider>\r\n        </TodoStateContext.Provider>\r\n    );\r\n}\r\n\r\nexport function useTodoState() {\r\n    return useContext(TodoStateContext);\r\n}\r\nexport function useTodoDispatch() {\r\n    return useContext(TodoDispatchContext);\r\n}\r\nexport function useTodoNextId() {\r\n    return useContext(TodoNextIdContext);\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { useTodoState } from '../TodoContext';\r\n\r\nconst TodoHeadBlock = styled.div`\r\n    padding: 48px 32px 24px;\r\n    border-bottom: 1px solid #e9ecef;\r\n    h1{\r\n        margin: 0;\r\n        font-size: 36px;\r\n        color: #343a40;\r\n    }\r\n    .day {\r\n        margin-top: 4px;\r\n        color: #868e96;\r\n        font-size: 21px;\r\n    }\r\n    .tasks-left {\r\n        color: #91a7ff;\r\n        font-size: 18px;\r\n        margin-top: 40px;\r\n        font-weight: bold;\r\n    }\r\n`;\r\n\r\nfunction TodoHead() {\r\n    const todos = useTodoState();\r\n    const undoneTasks = todos.filter(todo => !todo.done);\r\n\r\n    const today = new Date();\r\n    const dateString = today.toLocaleDateString('ko-KR', {\r\n        year: 'numeric',\r\n        month: 'long',\r\n        day: 'numeric'\r\n    });\r\n    const dayname = today.toLocaleDateString('ko-KR', {\r\n        weekday: 'long'\r\n    })\r\n\r\n    console.log(todos);\r\n    return(\r\n        <TodoHeadBlock>\r\n            <h1>{dateString}</h1>\r\n            <div className=\"day\">{dayname}</div>\r\n            <div className=\"tasks-left\">할 일 {undoneTasks.length}개 남음</div>\r\n        </TodoHeadBlock>\r\n    );\r\n}\r\n\r\nexport default TodoHead;","import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { MdDone, MdDelete } from 'react-icons/md';\r\nimport { useTodoDispatch } from '../TodoContext';\r\n\r\nconst Remove = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    color: #dee2e6;\r\n    font-size: 24px;\r\n    cursor: pointer;\r\n    &:hover {\r\n        color: #f783ac;\r\n    }\r\n    opacity: 0;\r\n`;\r\n\r\nconst TodoItemBlock = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    padding: 12px 0 0 12px;\r\n    &:hover {\r\n        ${Remove} {\r\n            opacity: 1;\r\n        }\r\n    }\r\n`;\r\n\r\nconst CheckCircle = styled.div`\r\n    width: 32px;\r\n    height: 32px;\r\n    border-radius: 50%;\r\n    border: 1px solid #91a7ff;\r\n    font-size: 24px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    cursor: pointer;\r\n    margin-right: 20px;\r\n    ${props => \r\n    props.done &&\r\n    css`\r\n        border: 1px solid #91a7ff;\r\n        color: #91a7ff;\r\n    `}\r\n`;\r\n\r\nconst Text = styled.div`\r\n    flex: 1;\r\n    font-size: 21px;\r\n    color: #494949;\r\n    ${props =>\r\n    props.done &&\r\n    css`\r\n        color: #ced4da;\r\n    `}\r\n`;\r\n\r\nfunction TodoItem({id, done, text}) {\r\n    const dispatch = useTodoDispatch();\r\n    const onToggle = () => dispatch({\r\n        type: 'TOGGLE',\r\n        id\r\n    });\r\n    const onRemove = () => dispatch({\r\n        type: 'REMOVE',\r\n        id\r\n    });\r\n    return(\r\n        <TodoItemBlock>\r\n            <CheckCircle done={done} onClick={onToggle}>{done && <MdDone/>}</CheckCircle>\r\n            <Text done={done}>{text}</Text>\r\n            <Remove onClick={onRemove}><MdDelete/></Remove>\r\n        </TodoItemBlock>\r\n    );\r\n}\r\n\r\nexport default TodoItem;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport TodoItem from './TodoItems';\r\nimport { useTodoState } from '../TodoContext';\r\n\r\nconst TodoListBlock = styled.div`\r\n    flex: 1;\r\n    padding: 20px 32px 48px;\r\n    overflow-y: auto;\r\n`;\r\n\r\nfunction TodoList() {\r\n    const todos = useTodoState();\r\n    return(\r\n        <TodoListBlock>\r\n            {todos.map(todo => (\r\n                <TodoItem \r\n                    key={todo.id}\r\n                    id={todo.id}\r\n                    text={todo.text}\r\n                    done={todo.done}\r\n                />))\r\n        }\r\n        </TodoListBlock>\r\n    );\r\n}\r\n\r\nexport default TodoList;","import React, { useState } from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { MdAdd } from 'react-icons/md';\r\nimport { useTodoDispatch, useTodoNextId } from '../TodoContext';\r\n\r\nconst CircleButton = styled.div`\r\n    background: #91a7ff;\r\n    &:hover {\r\n        background: #fcc2d7;\r\n    }\r\n    &:active {\r\n        background: #f783ac;\r\n    }\r\n\r\n    width: 80px;\r\n    height: 80px;\r\n\r\n    position: absolute;\r\n    left: 50%;\r\n    bottom: 0;\r\n    z-index: 5;\r\n    transform: translate(-50%, 50%);\r\n    transition: all 0.2s ease-in;\r\n\r\n    cursor: pointer;\r\n    font-size: 60px;\r\n    color: #fff;\r\n    border: none;\r\n    border-radius: 50%;\r\n    outline: none;\r\n\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    \r\n    ${props => props.open && css`\r\n        background: #91a7ff;\r\n        &:hover {\r\n            background: #f783ac;\r\n        }\r\n        &:active {\r\n            background: #fcc2d7;\r\n        }\r\n        transform: translate(-50%, 50%) rotate(45deg);\r\n    `};\r\n`;\r\n\r\nconst InsertFormPositioner = styled.div`\r\n    width: 100%;\r\n    position: absolute;\r\n    bottom: 0;\r\n    left: 0;\r\n`;\r\n\r\nconst InsertForm = styled.form`\r\n    background: #f8f9fa;\r\n    padding: 32px;\r\n    padding-bottom: 72px;\r\n    border-bottom-left-radius: 16px;\r\n    border-bottom-right-radius: 16px;\r\n    border-top: 1px solid #e9ecef;\r\n`;\r\n\r\nconst Input = styled.input`\r\n    width: 100%;\r\n    padding: 12px;\r\n    border: 1px solid #dee2e6;\r\n    border-radius: 4px;\r\n    outline: none;\r\n    font-size: 16px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\n\r\nfunction TodoCreate() {\r\n    const [open, setOpen] = useState(false);\r\n    const onToggle = () => setOpen(!open)\r\n\r\n    const dispatch = useTodoDispatch();\r\n    const nextId = useTodoNextId();\r\n\r\n    const[value, setValue] = useState('');\r\n    const onChange = (e) => setValue(e.target.value);\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        dispatch({\r\n            type: 'CREATE',\r\n            todo: {\r\n                id: nextId.current,\r\n                text: value,\r\n                done: false,\r\n            }\r\n        });\r\n        setValue('');\r\n        setOpen(false);\r\n        nextId.current += 1;\r\n    }\r\n\r\n    return(\r\n        <>\r\n            {open && (\r\n            <InsertFormPositioner>\r\n                <InsertForm onSubmit={onSubmit}>\r\n                    <Input\r\n                        placeholder=\"할 일 입력 후 ENTER\"\r\n                        autoFocus\r\n                        onChange={onChange}\r\n                        value={value}\r\n                    />\r\n                </InsertForm>\r\n            </InsertFormPositioner>\r\n            )}\r\n            <CircleButton onClick={onToggle} open={open}>\r\n                <MdAdd/>\r\n            </CircleButton>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TodoCreate;","import React from 'react';\nimport {createGlobalStyle} from 'styled-components';\nimport TodoTemplete from './components/TodoTemplate';\nimport TodoHead from './components/TodoHead';\nimport TodoList from './components/TodoList';\nimport TodoCreate from './components/TodoCreate';\nimport { TodoProvider } from './TodoContext';\n\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    background: #e9ecef;\n  }\n`;\n\nfunction App() {\n  return (\n    <TodoProvider>\n      <GlobalStyle/>\n      <TodoTemplete>\n        <TodoHead/>\n        <TodoList/>\n        <TodoCreate/>\n      </TodoTemplete>\n    </TodoProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}